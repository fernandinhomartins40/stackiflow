# ðŸš€ Stacki Production Dockerfile
# Tailwind-Native Visual Website Builder

FROM node:20-alpine AS base

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.14.4 --activate

# Set working directory
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY packages packages
COPY apps/builder/package.json apps/builder/

# Install dependencies
RUN pnpm install --frozen-lockfile --prod

# Build stage
FROM base AS build

# Install all dependencies (including dev)
RUN pnpm install --frozen-lockfile

# Copy source code
COPY . .

# Build application
RUN pnpm build

# Production stage
FROM node:20-alpine AS production

# Install pnpm and runtime dependencies
RUN corepack enable && corepack prepare pnpm@9.14.4 --activate
RUN apk add --no-cache postgresql-client

WORKDIR /app

# Copy built application
COPY --from=build /app/apps/builder/build ./build
COPY --from=build /app/apps/builder/package.json ./
COPY --from=build /app/packages/prisma-client ./prisma-client
COPY --from=build /app/node_modules ./node_modules

# Create non-root user for security
RUN addgroup -g 1001 -S stacki && \
    adduser -S stacki -u 1001 -G stacki

# Change ownership
RUN chown -R stacki:stacki /app
USER stacki

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1

# Start application
CMD ["pnpm", "start"]